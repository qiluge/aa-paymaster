/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../typechain-types/common";
import type {
  QuotaPaymaster,
  QuotaPaymasterInterface,
} from "./QuotaPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_quotas",
        type: "uint256[]",
      },
    ],
    name: "configQuota",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quotas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161115038038061115083398101604081905261002f9161009b565b806100393361004b565b6001600160a01b0316608052506100cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ad57600080fd5b81516001600160a01b03811681146100c457600080fd5b9392505050565b608051611039610117600039600081816101cf01528181610308015281816103d20152818161056001528181610627015281816106b70152818161076a01526109ac01526110396000f3fe6080604052600436106100dd5760003560e01c8063bb9fe6bf1161007f578063c399ec8811610059578063c399ec8814610261578063d0e30db014610276578063f2fde38b1461027e578063f465c77e1461029e57600080fd5b8063bb9fe6bf146101f1578063c23a5cea14610206578063c33342e91461022657600080fd5b80638da5cb5b116100bb5780638da5cb5b1461012c578063a9a234091461017d578063abc39dd41461019d578063b0d691fe146101bd57600080fd5b80630396cb60146100e2578063205c2878146100f7578063715018a614610117575b600080fd5b6100f56100f0366004610b78565b6102cc565b005b34801561010357600080fd5b506100f5610112366004610bc7565b61037e565b34801561012357600080fd5b506100f5610416565b34801561013857600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561018957600080fd5b506100f5610198366004610bf3565b61042a565b3480156101a957600080fd5b506100f56101b8366004610d8f565b610444565b3480156101c957600080fd5b506101537f000000000000000000000000000000000000000000000000000000000000000081565b3480156101fd57600080fd5b506100f5610556565b34801561021257600080fd5b506100f5610221366004610e51565b6105da565b34801561023257600080fd5b50610253610241366004610e51565b60016020526000908152604090205481565b604051908152602001610174565b34801561026d57600080fd5b50610253610686565b6100f561073c565b34801561028a57600080fd5b506100f5610299366004610e51565b6107c4565b3480156102aa57600080fd5b506102be6102b9366004610e6e565b61087b565b604051610174929190610ec2565b6102d461089e565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690630396cb609034906024016000604051808303818588803b15801561036257600080fd5b505af1158015610376573d6000803e3d6000fd5b505050505050565b61038661089e565b6040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561036257600080fd5b61041e61089e565b610428600061091f565b565b610432610994565b61043e84848484610a33565b50505050565b61044c61089e565b80518251146104bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696c6c20706172616d000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60005b8251811015610551578181815181106104da576104da610f3d565b6020026020010151600160008584815181106104f8576104f8610f3d565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061054990610f9b565b9150506104bf565b505050565b61055e61089e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105c657600080fd5b505af115801561043e573d6000803e3d6000fd5b6105e261089e565b6040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561066b57600080fd5b505af115801561067f573d6000803e3d6000fd5b5050505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610713573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107379190610fd3565b905090565b6040517fb760faf90000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063b760faf99034906024016000604051808303818588803b15801561066b57600080fd5b6107cc61089e565b73ffffffffffffffffffffffffffffffffffffffff811661086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104b3565b6108788161091f565b50565b60606000610887610994565b610892858585610a87565b91509150935093915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e74000000000000000000000060448201526064016104b3565b6000610a4183850185610e51565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020526040812080549293508492909190610a7b908490610fec565b90915550505050505050565b823573ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604081205460609290841115610b1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6578636565642071756f7461000000000000000000000000000000000000000060448201526064016104b3565b6040805173ffffffffffffffffffffffffffffffffffffffff8316602082015201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190529660009650945050505050565b600060208284031215610b8a57600080fd5b813563ffffffff81168114610b9e57600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461087857600080fd5b60008060408385031215610bda57600080fd5b8235610be581610ba5565b946020939093013593505050565b60008060008060608587031215610c0957600080fd5b843560038110610c1857600080fd5b9350602085013567ffffffffffffffff80821115610c3557600080fd5b818701915087601f830112610c4957600080fd5b813581811115610c5857600080fd5b886020828501011115610c6a57600080fd5b95986020929092019750949560400135945092505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610cf857610cf8610c82565b604052919050565b600067ffffffffffffffff821115610d1a57610d1a610c82565b5060051b60200190565b600082601f830112610d3557600080fd5b81356020610d4a610d4583610d00565b610cb1565b82815260059290921b84018101918181019086841115610d6957600080fd5b8286015b84811015610d845780358352918301918301610d6d565b509695505050505050565b60008060408385031215610da257600080fd5b823567ffffffffffffffff80821115610dba57600080fd5b818501915085601f830112610dce57600080fd5b81356020610dde610d4583610d00565b82815260059290921b84018101918181019089841115610dfd57600080fd5b948201945b83861015610e24578535610e1581610ba5565b82529482019490820190610e02565b96505086013592505080821115610e3a57600080fd5b50610e4785828601610d24565b9150509250929050565b600060208284031215610e6357600080fd5b8135610b9e81610ba5565b600080600060608486031215610e8357600080fd5b833567ffffffffffffffff811115610e9a57600080fd5b84016101608187031215610ead57600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610ef05760208187018101516060868401015201610ed3565b81811115610f02576000606083860101525b50602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fcc57610fcc610f6c565b5060010190565b600060208284031215610fe557600080fd5b5051919050565b600082821015610ffe57610ffe610f6c565b50039056fea2646970667358221220e1f382b856ca49c2bf19a52f6d8a2933a592de4c005e5604fcaf8e94b6d183f864736f6c634300080f0033";

type QuotaPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuotaPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QuotaPaymaster__factory extends ContractFactory {
  constructor(...args: QuotaPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<QuotaPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<QuotaPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): QuotaPaymaster {
    return super.attach(address) as QuotaPaymaster;
  }
  override connect(signer: Signer): QuotaPaymaster__factory {
    return super.connect(signer) as QuotaPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuotaPaymasterInterface {
    return new utils.Interface(_abi) as QuotaPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QuotaPaymaster {
    return new Contract(address, _abi, signerOrProvider) as QuotaPaymaster;
  }
}

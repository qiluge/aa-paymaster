/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../typechain-types/common";
import type {
  SponsorDepositPaymaster,
  SponsorDepositPaymasterInterface,
} from "./SponsorDepositPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addDepositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "tokenPriceOracle",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "quotas",
        type: "uint256[]",
      },
    ],
    name: "setSponsors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sponsors",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unlockBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokensTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200264a3803806200264a8339810160408190526200003491620000bb565b8062000040336200006b565b6001600160a01b031660805262000064336000908152600360205260409020439055565b50620000ed565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000ce57600080fd5b81516001600160a01b0381168114620000e657600080fd5b9392505050565b6080516125106200013a600039600081816103e90152818161059f0152818161066901528181610a3801528181610aff01528181610b8f01528181610d61015261107f01526125106000f3fe60806040526004361061018b5760003560e01c8063addd5099116100d6578063cc9c837c1161007f578063d0e30db011610059578063d0e30db01461050d578063f2fde38b14610515578063f465c77e1461053557600080fd5b8063cc9c837c1461048d578063cd8f80c2146104ad578063cfbec588146104cf57600080fd5b8063c23a5cea116100b0578063c23a5cea14610420578063c23f001f14610440578063c399ec881461047857600080fd5b8063addd509914610394578063b0d691fe146103d7578063bb9fe6bf1461040b57600080fd5b80636614ea08116101385780638da5cb5b116101125780638da5cb5b146103045780639ed0fb6814610350578063a9a234091461037457600080fd5b80636614ea08146102b9578063715018a6146102d9578063796d4371146102ee57600080fd5b8063493b017011610169578063493b0170146101e55780634a6f84cf1461025e5780635476bd721461029957600080fd5b80630396cb6014610190578063205c2878146101a5578063382edd9e146101c5575b600080fd5b6101a361019e366004611d21565b610563565b005b3480156101b157600080fd5b506101a36101c0366004611d69565b610615565b3480156101d157600080fd5b506101a36101e0366004611d95565b6106ad565b3480156101f157600080fd5b50610244610200366004611dd6565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291825282812054600390925291909120549091565b604080519283526020830191909152015b60405180910390f35b34801561026a57600080fd5b5061028b610279366004611e0f565b60036020526000908152604090205481565b604051908152602001610255565b3480156102a557600080fd5b506101a36102b4366004611dd6565b6107e2565b3480156102c557600080fd5b506101a36102d4366004611f39565b6108cc565b3480156102e557600080fd5b506101a3610a06565b3480156102fa57600080fd5b5061028b6188b881565b34801561031057600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610255565b34801561035c57600080fd5b506101a3336000908152600360205260409020439055565b34801561038057600080fd5b506101a361038f36600461200f565b610a1a565b3480156103a057600080fd5b5061032b6103af366004611e0f565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b3480156103e357600080fd5b5061032b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561041757600080fd5b506101a3610a2e565b34801561042c57600080fd5b506101a361043b366004611e0f565b610ab2565b34801561044c57600080fd5b5061028b61045b366004611dd6565b600260209081526000928352604080842090915290825290205481565b34801561048457600080fd5b5061028b610b5e565b34801561049957600080fd5b506101a36104a8366004611d95565b610c14565b3480156104b957600080fd5b506101a333600090815260036020526040812055565b3480156104db57600080fd5b5061028b6104ea36600461209e565b600460209081526000938452604080852082529284528284209052825290205481565b6101a3610d33565b34801561052157600080fd5b506101a3610530366004611e0f565b610dbb565b34801561054157600080fd5b506105556105503660046120e9565b610e72565b6040516102559291906121b3565b61056b610e95565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690630396cb609034906024016000604051808303818588803b1580156105f957600080fd5b505af115801561060d573d6000803e3d6000fd5b505050505050565b61061d610e95565b6040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156105f957600080fd5b6106cf73ffffffffffffffffffffffffffffffffffffffff8416333084610f16565b73ffffffffffffffffffffffffffffffffffffffff83811660009081526001602052604090205416610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f756e737570706f7274656420746f6b656e00000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260209081526040808320938616835292905290812080548392906107a6908490612204565b909155505073ffffffffffffffffffffffffffffffffffffffff821633036107dd576107dd33600090815260036020526040812055565b505050565b6107ea610e95565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600160205260409020541615610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f546f6b656e20616c7265616479207365740000000000000000000000000000006044820152606401610759565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b8051825114610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696c6c20706172616d00000000000000000000000000000000000000000000006044820152606401610759565b60005b8251811015610a00578181815181106109555761095561221c565b60209081029190910181015133600090815260048352604080822073ffffffffffffffffffffffffffffffffffffffff891683529093529182208551919290918690859081106109a7576109a761221c565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806109f89061224b565b91505061093a565b50505050565b610a0e610e95565b610a186000610ff2565b565b610a22611067565b610a0084848484611106565b610a36610e95565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a9e57600080fd5b505af1158015610a00573d6000803e3d6000fd5b610aba610e95565b6040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b5050505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0f9190612283565b905090565b3360009081526003602052604090205415801590610c4057503360009081526003602052604090205443115b610ccc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b60448201527f656e4465706f73697400000000000000000000000000000000000000000000006064820152608401610759565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260026020908152604080832033845290915281208054839290610d0c90849061229c565b909155506107dd905073ffffffffffffffffffffffffffffffffffffffff8416838361127e565b6040517fb760faf90000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063b760faf99034906024016000604051808303818588803b158015610b4357600080fd5b610dc3610e95565b73ffffffffffffffffffffffffffffffffffffffff8116610e66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610759565b610e6f81610ff2565b50565b60606000610e7e611067565b610e898585856112d4565b91509150935093915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610759565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610a009085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611881565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610a18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152606401610759565b600080808080611118878901896122b3565b9450945094509450945060008183856188b86111349190612304565b61113e908a612204565b6111489190612304565b6111529190612341565b905060028a60028111156111685761116861237c565b146111945761118f73ffffffffffffffffffffffffffffffffffffffff8616873084610f16565b6111de565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152600260209081526040808320938a16835292905290812080548392906111d890849061229c565b90915550505b73ffffffffffffffffffffffffffffffffffffffff85166000908152600260205260408120829161122460005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461126d9190612204565b909155505050505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107dd9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610f70565b606060006188b88560a001351161136d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4465706f7369745061796d61737465723a2067617320746f6f206c6f7720666f60448201527f7220706f73744f700000000000000000000000000000000000000000000000006064820152608401610759565b36600061137e6101208801886123ab565b909250905060288114806113925750603c81145b61141e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f4465706f7369745061796d61737465723a207061796d6173746572416e64446160448201527f7461206d757374207370656369667920746f6b656e00000000000000000000006064820152608401610759565b600061142e602860148486612417565b61143791612441565b60601c90508735600061144a838961198d565b905060006114578b611adb565b905060288590036115db5773ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604090205415611514576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f60448201527f636b6564000000000000000000000000000000000000000000000000000000006064820152608401610759565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600260209081526040808320938716835292905220548211156115d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4465706f7369745061796d61737465723a206465706f73697420746f6f206c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610759565b611826565b60006115ea866028818a612417565b6115f391612441565b60601c60008181526003602052604090205490915015611695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4465706f7369745061796d61737465723a2073706f6e736f72206465706f736960448201527f74206e6f74206c6f636b656400000000000000000000000000000000000000006064820152608401610759565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260026020908152604080832093851683529290522054831115611757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4465706f7369745061796d61737465723a2073706f6e736f72206465706f736960448201527f7420746f6f206c6f7700000000000000000000000000000000000000000000006064820152608401610759565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526004602090815260408083208985168452825280832093881683529290522054831115611823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4465706f7369745061796d61737465723a206578636565642073706f6e736f7260448201527f277320616c6c6f77616e636500000000000000000000000000000000000000006064820152608401610759565b92505b6040805173ffffffffffffffffffffffffffffffffffffffff948516602082015294909316848401526060840152608083015260a0808301979097528051808303909701875260c09091019052509295600095509350505050565b60006118e3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611b029092919063ffffffff16565b8051909150156107dd57808060200190518101906119019190612489565b6107dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610759565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526001602052604081205490911680611a44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4465706f7369745061796d61737465723a20756e737570706f7274656420746f60448201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152608401610759565b6040517fd1eca9cf0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff82169063d1eca9cf90602401602060405180830381865afa158015611aaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad39190612283565b949350505050565b600060e0820135610100830135808203611af6575092915050565b611ad382488301611b11565b6060611ad38484600085611b29565b6000818310611b205781611b22565b825b9392505050565b606082471015611bbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610759565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611be491906124ab565b60006040518083038185875af1925050503d8060008114611c21576040519150601f19603f3d011682016040523d82523d6000602084013e611c26565b606091505b5091509150611c3787838387611c42565b979650505050505050565b60608315611cd8578251600003611cd15773ffffffffffffffffffffffffffffffffffffffff85163b611cd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610759565b5081611ad3565b611ad38383815115611ced5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075991906124c7565b600060208284031215611d3357600080fd5b813563ffffffff81168114611b2257600080fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610e6f57600080fd5b60008060408385031215611d7c57600080fd5b8235611d8781611d47565b946020939093013593505050565b600080600060608486031215611daa57600080fd5b8335611db581611d47565b92506020840135611dc581611d47565b929592945050506040919091013590565b60008060408385031215611de957600080fd5b8235611df481611d47565b91506020830135611e0481611d47565b809150509250929050565b600060208284031215611e2157600080fd5b8135611b2281611d47565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611ea257611ea2611e2c565b604052919050565b600067ffffffffffffffff821115611ec457611ec4611e2c565b5060051b60200190565b600082601f830112611edf57600080fd5b81356020611ef4611eef83611eaa565b611e5b565b82815260059290921b84018101918181019086841115611f1357600080fd5b8286015b84811015611f2e5780358352918301918301611f17565b509695505050505050565b600080600060608486031215611f4e57600080fd5b8335611f5981611d47565b925060208481013567ffffffffffffffff80821115611f7757600080fd5b818701915087601f830112611f8b57600080fd5b8135611f99611eef82611eaa565b81815260059190911b8301840190848101908a831115611fb857600080fd5b938501935b82851015611fdf578435611fd081611d47565b82529385019390850190611fbd565b965050506040870135925080831115611ff757600080fd5b505061200586828701611ece565b9150509250925092565b6000806000806060858703121561202557600080fd5b84356003811061203457600080fd5b9350602085013567ffffffffffffffff8082111561205157600080fd5b818701915087601f83011261206557600080fd5b81358181111561207457600080fd5b88602082850101111561208657600080fd5b95986020929092019750949560400135945092505050565b6000806000606084860312156120b357600080fd5b83356120be81611d47565b925060208401356120ce81611d47565b915060408401356120de81611d47565b809150509250925092565b6000806000606084860312156120fe57600080fd5b833567ffffffffffffffff81111561211557600080fd5b8401610160818703121561212857600080fd5b95602085013595506040909401359392505050565b60005b83811015612158578181015183820152602001612140565b83811115610a005750506000910152565b6000815180845261218181602086016020860161213d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6040815260006121c66040830185612169565b90508260208301529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115612217576122176121d5565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361227c5761227c6121d5565b5060010190565b60006020828403121561229557600080fd5b5051919050565b6000828210156122ae576122ae6121d5565b500390565b600080600080600060a086880312156122cb57600080fd5b85356122d681611d47565b945060208601356122e681611d47565b94979496505050506040830135926060810135926080909101359150565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561233c5761233c6121d5565b500290565b600082612377577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126123e057600080fd5b83018035915067ffffffffffffffff8211156123fb57600080fd5b60200191503681900382131561241057600080fd5b9250929050565b6000808585111561242757600080fd5b8386111561243457600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156124815780818660140360031b1b83161692505b505092915050565b60006020828403121561249b57600080fd5b81518015158114611b2257600080fd5b600082516124bd81846020870161213d565b9190910192915050565b602081526000611b22602083018461216956fea26469706673582212206dc8983f4e71f8963aeb66341cbe422df5f97b5432442cbe5e6a4037de207c6a64736f6c634300080f0033";

type SponsorDepositPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SponsorDepositPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SponsorDepositPaymaster__factory extends ContractFactory {
  constructor(...args: SponsorDepositPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SponsorDepositPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<SponsorDepositPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): SponsorDepositPaymaster {
    return super.attach(address) as SponsorDepositPaymaster;
  }
  override connect(signer: Signer): SponsorDepositPaymaster__factory {
    return super.connect(signer) as SponsorDepositPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SponsorDepositPaymasterInterface {
    return new utils.Interface(_abi) as SponsorDepositPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SponsorDepositPaymaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SponsorDepositPaymaster;
  }
}
